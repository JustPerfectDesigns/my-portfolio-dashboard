// 'use-client';

import Head from "next/head";
import Image from "next/image";
import aboutImg from "../public/images/gabriel-img.png";
import Link from "next/link";
import Footer from "../components/Footer";
import { client, urlFor } from "../lib/client";
import { Tab } from "@headlessui/react";
import tabNav from "../data/tabNav";
import frontendSkills from "./../data/frontendSkills";
import backendSkills from "./../data/backendSkills";
import uiSkills from "./../data/uiSkills";
import otherSkills from "./../data/otherSkills";
import { useState, useEffect } from "react";
import { useTheme } from "next-themes";
import { useRouter } from "next/router";
import imageUrlBuilder from "@sanity/image-url";
import { motion } from "framer-motion";
import {
	cardVariants,
	staggerContainer,
	textVariant,
	leftVariant,
	rightVariant,
	opacityVariant,
} from "../utils/motion";

// function classNames(...classes) {
// 	return classes.filter(Boolean).join(" ");
// }

export default function Home({ portfolios }) {
	const router = useRouter();
	const [mappedPortfolio, setMappedPortfolio] = useState([]);

	useEffect(() => {
		if (portfolios.length) {
			const imgBuilder = imageUrlBuilder({
				projectId: "r5dols4o",
				dataset: "production",
			});

			setMappedPortfolio(
				portfolios.map((p) => {
					return {
						...p,
						image: imgBuilder.image(p.image),
					};
				})
			);
		} else {
			setMappedPortfolio([]);
		}
	}, [portfolios]);

	const { systemTheme, theme, setTheme } = useTheme();
	const [mounted, setMounted] = useState(false);

	useEffect(() => {
		setMounted(true);
	}, []);

	if (!mounted) return null;
	const currentTheme = theme === "system" ? systemTheme : theme;

	return (
		<div className="font-sans">
			<Head>
				<title>Gabriel Samuel Aina | Portfolio Dashboard</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/gab-favicon.png" />
			</Head>

			<motion.main
				className=""
				exit={{ opacity: 0 }}
				initial={{ opacity: 0 }}
				animate={{ opacity: 1 }}
			>
				<div className="containerr">
					<motion.div
						variants={staggerContainer}
						initial="hidden"
						whileInView="show"
						viewport={{ once: true, amount: 0.25 }}
						className="w-full bg-[#F0F2F4] py-[5rem] px-6 dark:bg-black-container md:py-[7rem] lg:px-[6rem]"
					>
						<motion.h3
							variants={textVariant(0.3)}
							className="mb-8 text-center text-lg font-semibold uppercase text-green-color-alt dark:text-green-color lg:text-2xl"
						>
							Hello, I'm Gabriel Samuel A.
						</motion.h3>
						<motion.div
							variants={textVariant(0.4)}
							className="mx-[auto] h-[1px] w-[80px] bg-green-color-alt dark:bg-green-color"
						></motion.div>
						<motion.h2
							variants={textVariant(0.5)}
							className="mt-8 text-center text-[2.2rem] font-semibold leading-10 text-[#121212] dark:text-white md:text-3xl lg:text-6xl lg:leading-[1.3]"
						>
							An Exceptional UI Designer, <br /> Front-End, and MERN Stack
							Developer.
						</motion.h2>

						<motion.p
							variants={textVariant(0.6)}
							className="mt-8 text-center text-[1.1rem] font-light leading-[1.6] text-[#121212] dark:text-white lg:text-[1.5rem]"
						>
							Simply put, my passion is to help businesses succeed worldwide
							through my skills, knowledge, and dedication to growth.{" "}
							<b>
								<strong>
									I'm also currently learning Mobile App Development using React
									Native, Dart and Flutter.
								</strong>
							</b>
						</motion.p>
						<motion.div
							variants={textVariant(0.7)}
							className="mt-24 flex flex-wrap justify-center gap-y-12 gap-x-4"
						>
							<motion.div
								whileHover={{ scale: 1.2 }}
								whileTap={{ scale: 0.9 }}
								transition={{ type: "spring", stiffness: 400, damping: 17 }}
							>
								<Link
									href="/case-study"
									className="bg-black-button py-5 px-8 font-semibold text-white"
								>
									See My Work
								</Link>
							</motion.div>

							<motion.div
								whileHover={{ scale: 1.2 }}
								whileTap={{ scale: 0.9 }}
								transition={{ type: "spring", stiffness: 400, damping: 17 }}
							>
								<Link
									href="../resume/GABRIEL-SAMUEL-AINA-CV-RESUME.zip"
									className="bg-green-color-alt py-5 px-8 font-semibold text-white dark:bg-green-color"
									download={
										"GABRIEL SAMUEL AINA CV/Resume - Dark and Light Version"
									}
									target="_blank"
								>
									Download CV
								</Link>
								{/* <a href="https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf" target="_blank" rel="noopener noreferrer" ><button>Download CV</button></a> */}
							</motion.div>
						</motion.div>
					</motion.div>

					<div className="skills__section mt-20">
						<motion.div
							variants={staggerContainer}
							initial="hidden"
							whileInView="show"
							viewport={{ once: true, amount: 0.6 }}
						>
							<motion.h2
								variants={leftVariant(0.6)}
								className="text-center text-2xl font-semibold text-[#121212] dark:text-white"
							>
								My Skills
							</motion.h2>
							<motion.div
								variants={rightVariant(0.6)}
								className="line mx-[auto] mt-4 h-[1px] w-[60px] bg-green-color-alt dark:bg-green-color"
							></motion.div>
						</motion.div>

						<div className="skills__tab">
							<div className="mx-[auto] w-full py-16 sm:px-0">
								<Tab.Group>
									<motion.div
										variants={staggerContainer}
										initial="hidden"
										whileInView="show"
										viewport={{ once: true, amount: 0.8 }}
									>
										<Tab.List className="flex flex-wrap justify-center gap-12">
											{tabNav.map((tab) => (
												<motion.div variants={opacityVariant(0.8)}>
													<Tab key={tab.id}>
														{({ selected }) => (
															/* Use the `selected` state to conditionally style the selected tab. */
															<button
																className={
																	selected
																		? "flex items-center justify-center gap-2 font-semibold text-[#121212] outline-none dark:text-white"
																		: "flex items-center justify-center gap-2 text-tab-color outline-none"
																}
															>
																<div className="text-xl text-green-color-alt dark:text-green-color">
																	{tab.icon}
																</div>
																{tab.title}
															</button>
														)}
													</Tab>
												</motion.div>
											))}
										</Tab.List>
									</motion.div>
									<Tab.Panels>
										<div>
											<Tab.Panel
												variants={staggerContainer}
												initial="hidden"
												whileInView="show"
												viewport={{ once: true, amount: 0.9 }}
												className="mx-[auto] mt-14 grid w-4/5 grid-cols-3 gap-y-10 gap-x-8 sm:grid-cols-5 lg:grid-cols-6"
											>
												{frontendSkills.map((skill) => (
													<motion.div
														key={skill.id}
														className="skills__data flex flex-col items-center justify-start text-center"
														variants={cardVariants}
														initial="offscreen"
														whileInView="onscreen"
														viewport={{ once: true, amount: 0.9 }}
													>
														<div className="skills__blob mb-4 grid h-[105px] w-[80px] place-items-center rounded-[3rem] bg-[#F0F2F4] ease-in dark:bg-black-container">
															<motion.div
																className="text-[2.8rem]"
																whileHover={{ scale: 1.1 }}
																transition={{
																	type: "spring",
																	stiffness: 400,
																	damping: 10,
																}}
															>
																{skill.icon}
															</motion.div>
														</div>
														<h3 className="skills__name font-serif text-sm text-[#121212] dark:text-white">
															{skill.title}
														</h3>
														<span className="skills__subtitle text-[.6rem] text-[#666666]">
															{skill.desc}
														</span>
													</motion.div>
												))}
											</Tab.Panel>
										</div>
										<div>
											<Tab.Panel
												variants={staggerContainer}
												initial="hidden"
												whileInView="show"
												viewport={{ once: true, amount: 0.9 }}
												className="mx-[auto] mt-14 grid w-4/5 grid-cols-3 gap-y-10 gap-x-8 sm:grid-cols-5 lg:grid-cols-6"
											>
												{backendSkills.map((skill) => (
													<motion.div
														key={skill.id}
														className="skills__data flex flex-col items-center justify-start text-center"
														variants={cardVariants}
														initial="offscreen"
														whileInView="onscreen"
														viewport={{ once: true, amount: 0.9 }}
													>
														<div className="skills__blob mb-4 grid h-[105px] w-[80px] place-items-center rounded-[3rem] bg-[#F0F2F4] ease-in dark:bg-black-container">
															<motion.div
																className="text-[2.8rem]"
																whileHover={{ scale: 1.1 }}
																transition={{
																	type: "spring",
																	stiffness: 400,
																	damping: 10,
																}}
															>
																{skill.icon}
															</motion.div>
														</div>
														<h3 className="skills__name font-serif text-sm text-[#121212] dark:text-white">
															{skill.title}
														</h3>
														<span className="skills__subtitle text-[.6rem] text-[#666666]">
															{skill.desc}
														</span>
													</motion.div>
												))}
											</Tab.Panel>
										</div>
										<Tab.Panel
											variants={staggerContainer}
											initial="hidden"
											whileInView="show"
											viewport={{ once: true, amount: 0.9 }}
											className="mx-[auto] mt-14 grid w-4/5 grid-cols-3 gap-y-10 gap-x-8 sm:grid-cols-5 lg:grid-cols-6"
										>
											{uiSkills.map((skill) => (
												<motion.div
													key={skill.id}
													items-center
													className="skills__data flex flex-col items-center justify-start text-center"
													variants={cardVariants}
													initial="offscreen"
													whileInView="onscreen"
													viewport={{ once: true, amount: 0.6 }}
												>
													<div className="skills__blob mb-4 grid h-[105px] w-[80px] place-items-center rounded-[3rem] bg-[#F6F8FA] ease-in dark:bg-black-container">
														<motion.div
															className="text-[2.8rem]"
															whileHover={{ scale: 1.1 }}
															transition={{
																type: "spring",
																stiffness: 400,
																damping: 10,
															}}
														>
															{skill.icon}
														</motion.div>
													</div>
													<h3 className="skills__name font-serif text-sm text-[#121212] dark:text-white">
														{skill.title}
													</h3>
													<span className="skills__subtitle text-[.6rem] text-[#666666]">
														{skill.desc}
													</span>
												</motion.div>
											))}
										</Tab.Panel>
										<Tab.Panel
											variants={staggerContainer}
											initial="hidden"
											whileInView="show"
											viewport={{ once: true, amount: 0.9 }}
											className="mx-[auto] mt-14 grid w-4/5 grid-cols-3 gap-y-10 gap-x-8 sm:grid-cols-5 lg:grid-cols-6"
										>
											{otherSkills.map((skill) => (
												<motion.div
													key={skill.id}
													className="skills__data flex flex-col items-center justify-start text-center"
													variants={cardVariants}
													initial="offscreen"
													whileInView="onscreen"
													viewport={{ once: true, amount: 0.6 }}
												>
													<div className="skills__blob mb-4 grid h-[105px] w-[80px] place-items-center rounded-[3rem] bg-[#F6F8FA] ease-in dark:bg-black-container">
														<motion.div
															className="text-[2.8rem]"
															whileHover={{ scale: 1.1 }}
															transition={{
																type: "spring",
																stiffness: 400,
																damping: 10,
															}}
														>
															{skill.icon}
														</motion.div>
													</div>
													<h3 className="skills__name font-serif text-sm text-[#121212] dark:text-white">
														{skill.title}
													</h3>
													<span className="skills__subtitle text-[.6rem] text-[#666666]">
														{skill.desc}
													</span>
												</motion.div>
											))}
										</Tab.Panel>
									</Tab.Panels>
								</Tab.Group>
							</div>
						</div>
					</div>

					<motion.div
						variants={staggerContainer}
						initial="hidden"
						whileInView="show"
						viewport={{ once: true, amount: 0.9 }}
						className="about lg:mx-[auto] lg:flex lg:hidden lg:w-[75%] lg:items-center lg:justify-center lg:gap-12"
					>
						<motion.div
							variants={cardVariants}
							initial="offscreen"
							whileInView="onscreen"
							viewport={{ once: true, amount: 0.6 }}
							className="img mx-[auto] h-[380px] items-center justify-center overflow-hidden rounded-t-[258px] rounded-b-[16px] md:h-[510px] lg:h-[600px]"
						>
							<Image
								src={aboutImg}
								alt="About Gabriel"
								className="w-[100%] rounded-t-[258px] rounded-b-[16px]"
							/>
						</motion.div>
						<motion.div
							variants={cardVariants}
							initial="offscreen"
							whileInView="onscreen"
							viewport={{ once: true, amount: 0.6 }}
							className="about__content"
						>
							<h2 className="mt-8 text-center text-2xl font-semibold text-[#121212] dark:text-white lg:text-left">
								Who Is Gabriel, and Why Him?
							</h2>
							<div className="line mx-[auto] mt-4 mb-10 h-[1px] w-[100px] bg-green-color-alt dark:bg-green-color lg:mx-[unset]"></div>
							<p className="mb-14 text-center font-normal leading-[1.8] text-[#121212] dark:text-white lg:text-left">
								Hi, I'm Gabriel Samuel Aina, a creative professional from
								Nigeria with over a decade of experience in graphic design,
								UI/UX design, and frontend development. I have worked with top
								brands in Nigeria, such as Jumia, and clients from around the
								world. Despite facing financial challenges as a teenager, I have
								built a successful career and I'm committed to delivering
								high-quality work while staying up-to-date with the latest
								trends in the industry.
							</p>

							<div className="flex items-center justify-center lg:justify-start">
								<motion.div
									whileHover={{ scale: 1.2 }}
									whileTap={{ scale: 0.9 }}
									transition={{ type: "spring", stiffness: 400, damping: 17 }}
								>
									<Link
										href="/about"
										className="bg-green-color-alt py-4 px-8 font-semibold text-white dark:bg-green-color"
									>
										Read More
									</Link>
								</motion.div>
							</div>
						</motion.div>
					</motion.div>

					<motion.div
						variants={staggerContainer}
						initial="hidden"
						whileInView="show"
						viewport={{ once: true, amount: 0.25 }}
						className="about hidden lg:mx-[auto] lg:mt-10 lg:block lg:flex lg:w-[75%] lg:items-center lg:justify-center lg:gap-12"
					>
						<motion.div
							variants={leftVariant(0.3)}
							className="img mx-[auto] h-[380px] items-center justify-center overflow-hidden rounded-t-[258px] rounded-b-[16px] md:h-[510px] lg:h-[600px]"
						>
							<Image
								src={aboutImg}
								alt="About Gabriel"
								className="w-[100%] rounded-t-[258px] rounded-b-[16px]"
							/>
						</motion.div>
						<motion.div variants={rightVariant(0.3)} className="about__content">
							<h2 className="mt-8 text-center text-2xl font-semibold text-[#121212] dark:text-white lg:text-left">
								Who Is Gabriel, and Why Him?
							</h2>
							<div className="line mx-[auto] mt-4 mb-10 h-[1px] w-[100px] bg-green-color-alt dark:bg-green-color lg:mx-[unset]"></div>
							<p className="mb-14 text-center font-normal leading-[1.8] text-[#121212] dark:text-white lg:text-left">
								Hi, I'm Gabriel Samuel Aina, a creative professional from
								Nigeria with over a decade of experience in graphic design,
								UI/UX design, and frontend development. I have worked with top
								brands in Nigeria, such as Jumia, and clients from around the
								world. Despite facing financial challenges as a teenager, I have
								built a successful career and I'm committed to delivering
								high-quality work while staying up-to-date with the latest
								trends in the industry.
							</p>

							<div className="flex items-center justify-center lg:justify-start">
								<motion.div
									whileHover={{ scale: 1.2 }}
									whileTap={{ scale: 0.9 }}
									transition={{ type: "spring", stiffness: 400, damping: 17 }}
								>
									<Link
										href="/about"
										className="bg-green-color-alt py-4 px-8 font-semibold text-white dark:bg-green-color"
									>
										Read More
									</Link>
								</motion.div>
							</div>
						</motion.div>
					</motion.div>

					<div className="portfolio mt-40">
						<motion.div
							variants={staggerContainer}
							initial="hidden"
							whileInView="show"
							viewport={{ once: true, amount: 0.4 }}
						>
							<motion.h2
								variants={leftVariant(0.4)}
								className="text-center text-2xl font-semibold text-[#121212] dark:text-white"
							>
								My Work
							</motion.h2>
							<motion.div
								variants={rightVariant(0.4)}
								className="line mx-[auto] mt-4 mb-20 h-[1px] w-[60px] bg-green-color-alt dark:bg-green-color"
							></motion.div>
						</motion.div>

						{mappedPortfolio.length ? (
							mappedPortfolio.map((p, index) => (
								<motion.article
									key={index}
									variants={cardVariants}
									initial="offscreen"
									whileInView="onscreen"
									viewport={{ once: true, amount: 0.1 }}
								>
									<motion.div
										whileHover={{ borderRadius: 300 }}
										className="img h-[200px] cursor-pointer overflow-hidden bg-contain md:h-[310px] lg:h-[450px] xl:h-[590px]"
										onClick={() => router.push(`/case-study/${p.slug.current}`)}
									>
										<motion.img
											src={p.image}
											alt={p.name}
											className="aspect-auto h-[100%] w-[100%] bg-contain object-cover"
											whileHover={{ scale: 1.1 }}
											transition={{
												type: "spring",
												stiffness: 400,
												damping: 10,
											}}
										/>
									</motion.div>
									<div className="work__content lg:flex-no-wrap mt-8 flex flex-wrap items-start justify-start gap-4 lg:mt-14">
										<div className="work__detail flex min-w-[270px] items-center justify-start gap-4 lg:min-w-[200px]">
											<span className="text-sm font-medium text-[#121212] dark:text-white">
												{p.type}
											</span>
											<div className="line h-[1px] w-[40px] bg-[#4F4F54]"></div>
										</div>
										<div className="work__name">
											<h3 className="text-3xl font-semibold text-[#121212] dark:text-white md:text-4xl lg:mt-[-6px] lg:text-6xl">
												{p.name}
											</h3>
											<p className="desc mt-1 text-sm leading-[1.6] text-[#7E7E86] lg:ml-[5px] lg:mt-6 lg:max-w-[500px]">
												{p.description}
											</p>
										</div>
									</div>
									<div className="line mx-[auto] mt-24 mb-10 h-[1px] w-[100%] bg-[#4F4F54]"></div>
								</motion.article>
							))
						) : (
							<>No Works Yet</>
						)}

						<div
							whileHover={{ scale: 1.2 }}
							whileTap={{ scale: 0.9 }}
							transition={{ type: "spring", stiffness: 400, damping: 17 }}
							className="mt-20 flex items-center justify-center"
						>
							<motion.div
								whileHover={{ scale: 1.2 }}
								whileTap={{ scale: 0.9 }}
								transition={{ type: "spring", stiffness: 400, damping: 17 }}
							>
								<Link
									href="/case-study"
									className="bg-green-color-alt py-4 px-8 font-semibold text-white dark:bg-green-color"
								>
									See All Work
								</Link>
							</motion.div>
						</div>
					</div>

					<Footer />
				</div>
			</motion.main>
		</div>
	);
}

export const getServerSideProps = async (pageContext) => {
	const query = encodeURIComponent(
		'*[ _type == "portfolio" ] | order(_createdAt desc) [0...3]'
	);
	const url = `https://r5dols4o.api.sanity.io/v1/data/query/production?query=${query}`;
	const result = await fetch(url).then((res) => res.json());

	if (!result.result || !result.result.length) {
		return {
			props: {
				portfolios: [],
			},
		};
	} else {
		return {
			props: {
				portfolios: result.result,
			},
		};
	}
};
