// 'use-client';

import Head from "next/head";
import Image from "next/image";
import aboutImg from "../public/images/about.jpg";
import Link from "next/link";
import Footer from "../components/Footer";
import { client, urlFor } from "../lib/client";
import { Tab } from "@headlessui/react";
import tabNav from "../data/tabNav";
import frontendSkills from "./../data/frontendSkills";
import uiSkills from "./../data/uiSkills";
import otherSkills from "./../data/otherSkills";
import { useState, useEffect } from "react";
import { useTheme } from "next-themes";
import { useRouter } from 'next/router';
import imageUrlBuilder from '@sanity/image-url';
import { motion } from "framer-motion";
import {
	cardVariants,
	staggerContainer,
	textVariant,
	leftVariant,
	rightVariant,
	opacityVariant,
} from "../utils/motion";

// function classNames(...classes) {
// 	return classes.filter(Boolean).join(" ");
// }

export default function Home({ portfolios }) {
	const router = useRouter();
	const [mappedPortfolio, setMappedPortfolio] = useState([]);

	useEffect(() => {
	  if (portfolios.length) {
		 const imgBuilder = imageUrlBuilder({
			projectId: 'r5dols4o',
			dataset: 'production',
		 });

		 setMappedPortfolio(
			portfolios.map(p => {
			  return {
				 ...p,
				 image: imgBuilder.image(p.image),
			  }
			})
		 );
	  } else {
		 setMappedPortfolio([]);
	  }
	}, [portfolios]);

	const { systemTheme, theme, setTheme } = useTheme();
	const [mounted, setMounted] = useState(false);

	useEffect(() => {
		setMounted(true);
	}, []);

	if (!mounted) return null;
	const currentTheme = theme === "system" ? systemTheme : theme;



	return (
		<div className="font-sans">
			<Head>
				<title>Gabriel Samuel Aina | Portfolio Dashboard</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/gab-favicon.png" />
			</Head>

			<motion.main
				className=""
				exit={{ opacity: 0 }}
				initial={{ opacity: 0 }}
				animate={{ opacity: 1 }}
			>
				<div className="containerr">
					<motion.div
						variants={staggerContainer}
						initial="hidden"
						whileInView="show"
						viewport={{ once: true, amount: 0.25 }}
						className="w-full py-[5rem] md:py-[7rem] dark:bg-black-container bg-[#F6F8FA] px-6 lg:px-[6rem]"
					>
						<motion.h3
							variants={textVariant(0.3)}
							className="text-lg lg:text-2xl text-green-color-alt dark:text-green-color uppercase font-semibold text-center mb-8"
						>
							Gabriel Samuel A.
						</motion.h3>
						<motion.div
							variants={textVariant(0.4)}
							className="w-[80px] h-[1px] bg-green-color-alt dark:bg-green-color mx-[auto]"
						></motion.div>
						<motion.h2
							variants={textVariant(0.5)}
							className="text-[2.2rem] md:text-3xl lg:text-6xl leading-10 lg:leading-[1.3] dark:text-white text-[#121212] font-semibold text-center mt-8"
						>
							Iâ€™m a Front-End Developer with <br />
							experience in UI & Graphics
						</motion.h2>

						<motion.p
							variants={textVariant(0.6)}
							className="mt-8 text-[1.1rem] lg:text-[1.5rem] dark:text-white text-[#121212] font-light text-center leading-[1.6]"
						>
							Hello, I'm Gabriel Samuel Aina, My passion is to help businesses
							succeed worldwide through my skills, knowledge, and dedication to
							growth.
						</motion.p>
						<motion.div
							variants={textVariant(0.7)}
							className="mt-24 flex flex-wrap gap-y-12 gap-x-4 justify-center"
						>
							<motion.div
								whileHover={{ scale: 1.2 }}
								whileTap={{ scale: 0.9 }}
								transition={{ type: "spring", stiffness: 400, damping: 17 }}
							>
								<Link
									href="/case-study"
									className="py-5 px-8 bg-black-button text-white font-semibold"
								>
									See My Work
								</Link>
							</motion.div>

							<motion.div
								whileHover={{ scale: 1.2 }}
								whileTap={{ scale: 0.9 }}
								transition={{ type: "spring", stiffness: 400, damping: 17 }}
							>
								<Link
									href="/case-study"
									className="py-5 px-8 bg-green-color-alt dark:bg-green-color text-white font-semibold"
								>
									Download CV
								</Link>
							</motion.div>
						</motion.div>
					</motion.div>

					<div className="skills__section mt-20">
						<motion.div
							variants={staggerContainer}
							initial="hidden"
							whileInView="show"
							viewport={{ once: true, amount: 0.6 }}
						>
							<motion.h2
								variants={leftVariant(0.6)}
								className="text-center text-2xl dark:text-white text-[#121212] font-semibold"
							>
								My Skills
							</motion.h2>
							<motion.div
								variants={rightVariant(0.6)}
								className="line w-[60px] h-[1px] bg-green-color-alt dark:bg-green-color mt-4 mx-[auto]"
							></motion.div>
						</motion.div>

						<div className="skills__tab">
							<div className="w-full py-16 sm:px-0 mx-[auto]">
								<Tab.Group>
									<motion.div
										variants={staggerContainer}
										initial="hidden"
										whileInView="show"
										viewport={{ once: true, amount: 0.8 }}
									>
										<Tab.List className="flex flex-wrap justify-center gap-12">
											{tabNav.map((tab) => (
												<motion.div variants={opacityVariant(0.8)}>
													<Tab key={tab.id}>
														{({ selected }) => (
															/* Use the `selected` state to conditionally style the selected tab. */
															<button
																className={
																	selected
																		? "dark:text-white text-[#121212] font-semibold flex gap-2 items-center justify-center outline-none"
																		: "text-tab-color flex gap-2 items-center justify-center outline-none"
																}
															>
																<div className="text-green-color-alt dark:text-green-color text-xl">
																	{tab.icon}
																</div>
																{tab.title}
															</button>
														)}
													</Tab>
												</motion.div>
											))}
										</Tab.List>
									</motion.div>
									<Tab.Panels>
										<div>
											<Tab.Panel
												variants={staggerContainer}
												initial="hidden"
												whileInView="show"
												viewport={{ once: true, amount: 0.9 }}
												className="w-4/5 mx-[auto] mt-14 grid grid-cols-3 sm:grid-cols-5 lg:grid-cols-6 gap-y-10 gap-x-8"
											>
												{frontendSkills.map((skill) => (
													<motion.div
														key={skill.id}
														className="skills__data flex flex-col justify-start items-center text-center"
														variants={cardVariants}
														initial="offscreen"
														whileInView="onscreen"
														viewport={{ once: true, amount: 0.9 }}
													>
														<div className="skills__blob grid w-[80px] h-[105px] ease-in dark:bg-black-container bg-[#F6F8FA] rounded-[3rem] place-items-center mb-4">
															<motion.div
																className="text-[2.8rem]"
																whileHover={{ scale: 1.1 }}
																transition={{
																	type: "spring",
																	stiffness: 400,
																	damping: 10,
																}}
															>
																{skill.icon}
															</motion.div>
														</div>
														<h3 className="skills__name font-serif text-sm dark:text-white text-[#121212]">
															{skill.title}
														</h3>
														<span className="skills__subtitle text-[.6rem] text-[#666666]">
															{skill.desc}
														</span>
													</motion.div>
												))}
											</Tab.Panel>
										</div>
										<Tab.Panel
											variants={staggerContainer}
											initial="hidden"
											whileInView="show"
											viewport={{ once: true, amount: 0.9 }}
											className="w-4/5 mx-[auto] mt-14 grid grid-cols-3 sm:grid-cols-5 lg:grid-cols-6 gap-y-10 gap-x-8"
										>
											{uiSkills.map((skill) => (
												<motion.div
													key={skill.id} items-center
													className="skills__data flex flex-col justify-start items-center text-center"
													variants={cardVariants}
													initial="offscreen"
													whileInView="onscreen"
													viewport={{ once: true, amount: 0.6 }}
												>
													<div className="skills__blob grid w-[80px] h-[105px] ease-in dark:bg-black-container bg-[#F6F8FA] rounded-[3rem] place-items-center mb-4">
														<motion.div
															className="text-[2.8rem]"
															whileHover={{ scale: 1.1 }}
															transition={{
																type: "spring",
																stiffness: 400,
																damping: 10,
															}}
														>
															{skill.icon}
														</motion.div>
													</div>
													<h3 className="skills__name font-serif text-sm dark:text-white text-[#121212]">
														{skill.title}
													</h3>
													<span className="skills__subtitle text-[.6rem] text-[#666666]">
														{skill.desc}
													</span>
												</motion.div>
											))}
										</Tab.Panel>
										<Tab.Panel
											variants={staggerContainer}
											initial="hidden"
											whileInView="show"
											viewport={{ once: true, amount: 0.9 }}
											className="w-4/5 mx-[auto] mt-14 grid grid-cols-3 sm:grid-cols-5 lg:grid-cols-6 gap-y-10 gap-x-8"
										>
											{otherSkills.map((skill) => (
												<motion.div
													key={skill.id}
													className="skills__data flex flex-col justify-start items-center text-center"
													variants={cardVariants}
													initial="offscreen"
													whileInView="onscreen"
													viewport={{ once: true, amount: 0.6 }}
												>
													<div className="skills__blob grid w-[80px] h-[105px] ease-in dark:bg-black-container bg-[#F6F8FA] rounded-[3rem] place-items-center mb-4">
														<motion.div
															className="text-[2.8rem]"
															whileHover={{ scale: 1.1 }}
															transition={{
																type: "spring",
																stiffness: 400,
																damping: 10,
															}}
														>
															{skill.icon}
														</motion.div>
													</div>
													<h3 className="skills__name font-serif text-sm dark:text-white text-[#121212]">
														{skill.title}
													</h3>
													<span className="skills__subtitle text-[.6rem] text-[#666666]">
														{skill.desc}
													</span>
												</motion.div>
											))}
										</Tab.Panel>
									</Tab.Panels>
								</Tab.Group>
							</div>
						</div>
					</div>

					<motion.div
						variants={staggerContainer}
						initial="hidden"
						whileInView="show"
						viewport={{ once: true, amount: 0.9 }}
						className="about lg:hidden lg:flex lg:gap-12 lg:items-center lg:justify-center lg:mx-[auto] lg:w-[75%]"
					>
						<motion.div
							variants={cardVariants}
							initial="offscreen"
							whileInView="onscreen"
							viewport={{ once: true, amount: 0.6 }}
							className="img h-[380px] md:h-[510px] lg:h-[600px] justify-center items-center rounded-t-[258px] rounded-b-[16px] overflow-hidden mx-[auto]"
						>
							<Image
								src={aboutImg}
								alt="About Gabriel"
								className="w-[100%] rounded-t-[258px] rounded-b-[16px]"
							/>
						</motion.div>
						<motion.div
							variants={cardVariants}
							initial="offscreen"
							whileInView="onscreen"
							viewport={{ once: true, amount: 0.6 }}
							className="about__content"
						>
							<h2 className="text-center lg:text-left text-2xl mt-8 dark:text-white text-[#121212] font-semibold">
								Who Is Gabriel, and Why Him?
							</h2>
							<div className="line w-[100px] h-[1px] mx-[auto] lg:mx-[unset] bg-green-color-alt dark:bg-green-color mt-4 mb-10"></div>
							<p className="dark:text-white text-[#121212] text-center lg:text-left font-normal leading-[1.8] mb-14">
								Hi, I'm Gabriel Samuel Aina, a creative professional from Nigeria with over a decade of experience in graphic design, UI/UX design, and frontend development. I have worked with top brands in Nigeria, such as Jumia, and clients from around the world. Despite facing financial challenges as a teenager, I have built a successful career and I'm committed to delivering high-quality work while staying up-to-date with the latest trends in the industry.
							</p>

							<div className="flex justify-center items-center lg:justify-start">
								<motion.div
									whileHover={{ scale: 1.2 }}
									whileTap={{ scale: 0.9 }}
									transition={{ type: "spring", stiffness: 400, damping: 17 }}
								>
									<Link
										href="/about"
										className="py-4 px-8 bg-green-color-alt dark:bg-green-color text-white font-semibold"
									>
										Read More
									</Link>
								</motion.div>
							</div>
						</motion.div>
					</motion.div>

					<motion.div
						variants={staggerContainer}
						initial="hidden"
						whileInView="show"
						viewport={{ once: true, amount: 0.25 }}
						className="about hidden lg:block lg:flex lg:gap-12 lg:items-center lg:justify-center lg:mx-[auto] lg:w-[75%] lg:mt-10"
					>
						<motion.div
							variants={leftVariant(0.3)}
							className="img h-[380px] md:h-[510px] lg:h-[600px] justify-center items-center rounded-t-[258px] rounded-b-[16px] overflow-hidden mx-[auto]"
						>
							<Image
								src={aboutImg}
								alt="About Gabriel"
								className="w-[100%] rounded-t-[258px] rounded-b-[16px]"
							/>
						</motion.div>
						<motion.div variants={rightVariant(0.3)} className="about__content">
							<h2 className="text-center lg:text-left text-2xl mt-8 dark:text-white text-[#121212] font-semibold">
								Who Is Gabriel, and Why Him?
							</h2>
							<div className="line w-[100px] h-[1px] mx-[auto] lg:mx-[unset] bg-green-color-alt dark:bg-green-color mt-4 mb-10"></div>
							<p className="dark:text-white text-[#121212] text-center lg:text-left font-normal leading-[1.8] mb-14">
								Hi, I'm Gabriel Samuel Aina, a creative professional from Nigeria with over a decade of experience in graphic design, UI/UX design, and frontend development. I have worked with top brands in Nigeria, such as Jumia, and clients from around the world. Despite facing financial challenges as a teenager, I have built a successful career and I'm committed to delivering high-quality work while staying up-to-date with the latest trends in the industry.
							</p>

							<div className="flex justify-center items-center lg:justify-start">
								<motion.div
									whileHover={{ scale: 1.2 }}
									whileTap={{ scale: 0.9 }}
									transition={{ type: "spring", stiffness: 400, damping: 17 }}
								>
									<Link
										href="/about"
										className="py-4 px-8 bg-green-color-alt dark:bg-green-color text-white font-semibold"
									>
										Read More
									</Link>
								</motion.div>
							</div>
						</motion.div>
					</motion.div>

					<div className="portfolio mt-40">
						<motion.div
							variants={staggerContainer}
							initial="hidden"
							whileInView="show"
							viewport={{ once: true, amount: 0.4 }}
						>
							<motion.h2
								variants={leftVariant(0.4)}
								className="text-center text-2xl dark:text-white text-[#121212] font-semibold"
							>
								My Work
							</motion.h2>
							<motion.div
								variants={rightVariant(0.4)}
								className="line w-[60px] h-[1px] bg-green-color-alt dark:bg-green-color mt-4 mb-20 mx-[auto]"
							></motion.div>
						</motion.div>

						{mappedPortfolio.length ? mappedPortfolio.map((p, index) => (
									<motion.article key={index} variants={cardVariants} initial="offscreen" whileInView="onscreen" viewport={{ once: true, amount: 0.1 }}>
										<motion.div
											whileHover={{ borderRadius: 300 }}
											className="img h-[200px] md:h-[310px] lg:h-[450px] xl:h-[590px] bg-contain overflow-hidden cursor-pointer"
											onClick={() => router.push(`/case-study/${p.slug.current}`)}
										>
											<motion.img
												src={p.image}
												alt={p.name}
												className="h-[100%] w-[100%] bg-contain aspect-auto"
												whileHover={{ scale: 1.1 }}
												transition={{
													type: "spring",
													stiffness: 400,
													damping: 10,
												}}
											/>
										</motion.div>
										<div className="work__content flex flex-wrap lg:flex-no-wrap gap-4 items-start justify-start mt-8 lg:mt-14">
												<div className="work__detail flex justify-start items-center gap-4 min-w-[270px] lg:min-w-[200px]">
													<span className="dark:text-white text-[#121212] text-sm font-medium">
														{p.type}
													</span>
													<div className="line w-[40px] h-[1px] bg-[#4F4F54]"></div>
												</div>
												<div className="work__name">
													<h3 className="dark:text-white text-[#121212] text-3xl md:text-4xl lg:text-6xl lg:mt-[-6px] font-semibold">
														{p.name}
													</h3>
													<p className="desc mt-1 text-[#7E7E86] text-sm leading-[1.6] lg:max-w-[500px] lg:ml-[5px] lg:mt-6">
														{p.description}
													</p>
												</div>
											</div>
											<div className="line w-[100%] h-[1px] bg-[#4F4F54] mt-24 mb-10 mx-[auto]"></div>
									</motion.article>
								)) : <>No Works Yet</>}

						<div
							whileHover={{ scale: 1.2 }}
							whileTap={{ scale: 0.9 }}
							transition={{ type: "spring", stiffness: 400, damping: 17 }}
							className="flex justify-center items-center mt-20"
						>
							<motion.div
								whileHover={{ scale: 1.2 }}
								whileTap={{ scale: 0.9 }}
								transition={{ type: "spring", stiffness: 400, damping: 17 }}
							>
								<Link
									href="/case-study"
									className="py-4 px-8 bg-green-color-alt dark:bg-green-color text-white font-semibold"
								>
									See All Work
								</Link>
							</motion.div>
						</div>
					</div>

					<Footer />
				</div>
			</motion.main>
		</div>
	);
}

export const getServerSideProps = async pageContext => {
	const query = encodeURIComponent('*[ _type == "portfolio" ] | order(_createdAt desc) [0...3]');
	const url = `https://r5dols4o.api.sanity.io/v1/data/query/production?query=${query}`;
	const result = await fetch(url).then(res => res.json());
 
	if (!result.result || !result.result.length) {
	  return {
		 props: {
			portfolios: [],
		 }
	  }
	} else {
	  return {
		 props: {
			portfolios: result.result,
		 }
	  }
	}
 };
 
